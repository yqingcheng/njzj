<style lang="scss">
    /*总体主盒子*/
    .container {
        position: relative;
        width: 100%;
        height: 100%;
        background-color: #fff;
        color: #939393;
        font-size: 30rpx;
    }
    .chat_list {
        width: 90%;
        padding-left: 5%;
        float: left;
        padding-right: 5%;
        margin-bottom: 1em;
    }
    .list_l {
        width: 100%;
        float: left;
    }
    .list_l .userimg {
        width: 20%;
        float: left;
    }
    .list_l .userimg image {
        width: 4em;
        height: 4em;
        border-radius: 50%;
    }
    .list_l .usertext {
        max-width: 70%;
        margin-left: 3%;
        float: left;
        font-size: 1.2em;
        border: 1px solid #f4f4f4;
        padding: .5em;
        border-radius: 5px;
        position: relative;
        margin-top: .5em;
    }
    .list_l .usertext text {
        max-width: 100%;
    }
    .list_l .usertext image {
        max-width: 100%;
    }
    .list_l .usertext:after {
        position: absolute;
        content: "";
        height: 0;
        width: 0;
        pointer-events: none;
        border: solid transparent;
        border-color: rgba(136, 183, 213, 0);
        border-right-color: #fff;
        border-width: 10px;
        top: 1em;
        right: 99%;
        margin-top: -10px;
    }
    .list_l .usertext:before {
        position: absolute;
        content: "";
        height: 0;
        width: 0;
        pointer-events: none;
        border: solid transparent;
        border-color: rgba(136, 183, 213, 0);
        border-right-color: #f4f4f4;
        border-width: 10px;
        top: 1em;
        right: 100%;
        margin-top: -10px;
    }
    .timer {
        width: 100%;
        float: left;
        text-align: center;
        margin: 40rpx 0 0 0;
    }
    .timer text {
        padding: 6rpx;
        background: #eee;
    }
    .list_r {
        width: 100%;
        float: right;
    }
    .list_r .userimg {
        width: 20%;
        float: right;
    }
    .list_r .userimg image {
        width: 4em;
        height: 4em;
        border-radius: 50%;
    }
    .list_r .usertext {
        max-width: 69%;
        margin-right: 5%;
        float: right;
        font-size: 1.2em;
        border: 1px solid #f4f4f4;
        padding: .5em;
        border-radius: 5px;
        position: relative;
        margin-top: .5em;
        background: #c7d9d9;
        text-align: right;
    }
    .list_r .usertext text {
        max-width: 100%;
    }
    .list_r .usertext image {
        max-width: 100%;
    }
    .list_r .usertext:after {
        position: absolute;
        content: "";
        height: 0;
        width: 0;
        pointer-events: none;
        border: solid transparent;
        border-color: rgba(136, 183, 213, 0);
        border-left-color: #c7d9d9;
        border-width: 10px;
        top: 1em;
        left: 99%;
        margin-top: -10px;
    }
    .list_r .usertext:before {
        position: absolute;
        content: "";
        height: 0;
        width: 0;
        pointer-events: none;
        border: solid transparent;
        border-color: rgba(136, 183, 213, 0);
        border-left-color: #f4f4f4;
        border-width: 10px;
        top: 1em;
        left: 100%;
        margin-top: -10px;
    }
    .wa-row {
        width: 100%;
        background: #f5f5f5;
    }
    .wa_l {
        width: 85%;
        float: left;
        display: flex;
        align-items: center;
    }
    .wa_l view {
        width: 90%;
        height: 100%;
        margin-left: 5%;
        border: 1px solid #2bca75;
        background: #f5f5f5;
        border-radius: 5px;
    }
    .wa_l view input {
        width: 95%;
        margin-left: 5%;
        height: 100%;
    }
    .wa_r {
        width: 15%;
        float: left;
    }
    .wa_r image {
        width: 3em;
        height: 3em;
    }
    #sub {
        padding: 1px 0;
        color: #2bca75;
        border: 1px solid #2bca75;
        border-radius: 5px;
        list-style-type: none;
        text-align: center;
        font-size: 1em;
    }
    .wa-row {
        display: flex;
        padding: 6rpx;
        width: 100%;
        box-sizing: border-box;
        background: #f5f5f5;
        transition: all 2s;
    }
    .moreImage {
        width: 40px;
        height: 40px;
        padding: 8px;
        border: 1px solid #e3e3e3;
        border-radius: 10px;
        background: #f3f3f3;
        margin: 5px;
    }
</style>

<template>
    <!--主盒子-->
    <view class="container">
        <scroll-view scroll-y="true" scroll-top="{{scrolltop}}" style="height:{{height-50}}px;transition: height .5s;" bindtap="tapscroll">
            <view class="chat_list">
                <view class="list_r">
                    <view class="timer"><text>{{question.createTime}}</text></view>
                    <view class="userimg">
                        <image src="{{question.askerHead}}"></image>
                    </view>
                    <view class="usertext">
                        <text class="vxtext">{{question.title}}</text>
                    </view>

                </view>
                <block wx:for="{{question.askAnswers}}" wx:key="id" wx:for-item="qitem">
                    <view class="list_r" wx:if="{{qitem.speakerType==1}}">
                        <view class="timer"><text>{{qitem.createTime}}</text></view>
                        <view class="userimg">
                            <image src="{{question.askerHead}}"></image>
                        </view>
                        <view class="usertext" wx:if="{{qitem.contentType==1}}">
                            <text class="vxtext">{{qitem.content}}</text>
                        </view>
                        <view class="usertext" wx:elif="{{qitem.contentType==2}}">
                            <image src='{{qitem.content}}'></image>
                        </view>
                        <view class="usertext" wx:else>
                            <text class="vxtext">暂不支持</text>
                        </view>

                    </view>
                    <view class="list_l" wx:if="{{qitem.speakerType==2}}">
                        <view class="timer"><text>{{qitem.createTime}}</text></view>
                        <view class="userimg">
                            <image src="{{question.answerHead}}"></image>
                        </view>
                        <view class="usertext" wx:if="{{qitem.contentType==1}}">
                            <text class="vxtext">{{qitem.content}}</text>
                        </view>
                        <view class="usertext" wx:elif="{{qitem.contentType==2}}">
                            <image src='{{qitem.content}}'></image>
                        </view>
                        <view class="usertext" wx:else>
                            <text class="vxtext">暂不支持</text>
                        </view>

                    </view>
                </block>
            </view>
        </scroll-view>
        <!-- wx:if="{{question.status==1 && question.step!=3}}" -->
        <view class="wa-row" style="height:50px;">
            <view class="wa_l">
                <view><input placeholder="请输入..." bindinput="sendMessage" value='{{msg}}' /></view>
            </view>
            <view class="wa_r">
                <image bindtap='elseBtn' wx:if="{{more}}" src='{{imgurl}}plus1.png'></image>
                <form report-submit="ture" bindsubmit="Btnall">
                    <button id="sub" formType="submit" wx:if="{{!more}}">发送</button>
                </form>
            </view>
        </view>
        <view id="emotionPanel" wx:if="{{moreBox}}">
            <view class="wa-row" style="background:#fff;">
                <form report-submit="ture" bindsubmit="chooseImg">
                    <button type="default" plain="false" formType='submit' style="border: none;"><image class="moreImage" src="../images/image.png"></image> </button>
                </form>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    var formatdate = require("../mixins/util").formatDate;
    var validate = require("../mixins/validate").validate;
    export default class Message extends wepy.page {
        config = {
            navigationBarTitleText: '问题详情'
        };
        components = {};
        data = {
            text: "",
            title: "标题",
            userInfo: {},
            scrolltop: 10000,
            messages: {
                img: ""
            },
            timer: 0,
            animationData: {},
            tap: "tapOff",
            height: 500,
            msg: '',
            more: true,
            moreBox: false,
            question: {
                status: 1,
                step: 2
            },
            imgurl: ''
        };
        computed = {};
        methods = {
            tapscroll(e) {
                this.moreBox = false
                this.tap = "tapOff"
                wx.getSystemInfo({
                    success: (res) => {
                        this.height = res.windowHeight
                    }
                })
            },
            elseBtn() {
                this.emotionBox = false
                this.moreBox = (this.tap == 'tapOff') ? true : false
                if (this.tap == "tapOff") {
                    this.tap = "tapOn"
                    wx.getSystemInfo({
                        success: (res) => {
                            this.height = res.windowHeight - 200
                            this.$apply()
                        }
                    })
                } else {
                    this.tap = "tapOff"
                    wx.getSystemInfo({
                        success: (res) => {
                            this.height = res.windowHeight
                        }
                    })
                }
            },
            chooseImg(e) {
                wx.chooseImage({
                    count: 1, // 默认9
                    sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
                    sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
                    success: (res) => {
                        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
                        var tempFilePaths = res.tempFilePaths[0];
                        this.messages.img = tempFilePaths;
                        this.Btnall(e);
                    }
                })
            },
            sendMessage(e) {
                if (!validate.isEmpty(e.detail.value)) {
                    this.more = false
                } else {
                    this.more = true
                }
                this.msg = e.detail.value
            },
        };
        callback(data) {
            if (data.code == 100) {
                let question = this.question;
                let caskans = question.askAnswers;
                let askAnswers = data.data.success;
                if (caskans == "" || caskans == null) {
                    caskans = [];
                }
                if (askAnswers != null && askAnswers.length != 0) {
                    for (var key in askAnswers) {
                        askAnswers[key].createTime = formatdate(new Date(askAnswers[key].createTime), "yyyy-MM-dd");
                        caskans.push(askAnswers[key]);
                    }
                }
                this.question = question
                this.moreBox = false
                this.more = true
                this.msg = ""
                this.messages = {
                    img: ""
                }
                this.scrolltop = 1000000
            } else { //失败的对话
                wx.showToast({
                    title: data.data.data.msg,
                    image: '../images/faile.png',
                    duration: 2000
                })
                let question = this.question;
                this.reQueryData(question.uuid);
            }
        };
        Btnall(e) {
            //把数据插入到messages中提交到后台
            //1F04A2085651F629933F61ADE8088363BC2EAE00A702F9A3042A98288BBC1DED
            let fromid = e.detail.formId;
            let img = this.messages.img;
            let sessionid = wx.getStorageSync("sessionId");
            let msg = this.msg;
            let question = this.question;
            let uuid = wx.getStorageSync("uuid");
            if (img == "") {
                wx.request({
                    url: `${this.$parent.globalData.h5url}/zzj/speak.do`,
                    data: {
                        "uuid": "",
                        "username": question.askerName,
                        "content": msg,
                        "qid": question.uuid,
                        "formId": fromid
                    },
                    method: 'post',
                    header: {
                        // 'content-type': 'application/json'
                        'content-type': 'application/x-www-form-urlencoded',
                        Cookie: 'JSESSIONID=' + sessionid,
                    },
                    success: (res) => {
                        this.callback(res);
                        this.$apply()
                    }
                })
            } else {
                wx.uploadFile({
                    url: url + "/njydt/question/speak.do",
                    filePath: img,
                    name: 'img',
                    formData: {
                        "uuid": "",
                        "username": question.askerName,
                        "qid": question.uuid,
                        "formId": fromid
                    },
                    header: {
                        Cookie: 'JSESSIONID=' + sessionid,
                        'content-type': 'application/x-www-form-urlencoded'
                    },
                    success: (res) => {
                        if (res.statusCode === 200) {
                            let data = JSON.parse(res.data);
                            this.callback(data);
                        }
                    }
                })
            }
        }
        events = {};
        onUnload() {
            if (this.timer != 0) {
                clearInterval(this.timer);
            }
        }
        reQueryData(quuid) {
            wx.request({
                url: `${this.$parent.globalData.h5url}/zzj/askZzjAnswerlist.do`,
                data: {
                    quuid: quuid
                },
                header: {
                    'content-type': 'application/json'
                },
                success: (res) => {
                    let q = res.data.data;
                    console.log(q)
                    if (q != null && q != "") {
                        q.createTime = formatdate(new Date(q.createTime), "yyyy-MM-dd");
                        let aws = q.askAnswers;
                        if (aws != null && aws.length != 0) {
                            for (var key in aws) {
                                aws[key].createTime = formatdate(new Date(aws[key].createTime), "yyyy-MM-dd");
                            }
                        }
                    }
                    this.question = q
                    this.more = true
                    this.msg = "",
                        this.messages = {
                            img: ""
                        }
                    this.scrolltop = 100000
                    this.$apply()
                }
            })
        }
        onLoad(options) {
            this.imgurl = this.$parent.globalData.yunimg_host
            // 页面初始化 options为页面跳转所带来的参数
            let quuid = options.quuid;
            //获取记录
            this.reQueryData(quuid);
            wx.getSystemInfo({
                success: (res) => {
                    this.height = res.windowHeight
                }
            });
            this.timer = setInterval(() => {
                if ((this.msg == "" || this.msg == null) &&
                    (this.messages.img == null || this.messages.img == "")) {
                    this.reQueryData(quuid);
                }
            }, 15000); //15秒刷新一次请求
        }
    }
</script>
